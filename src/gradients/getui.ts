import fetch from 'node-fetch'
import { writeFileSync } from 'fs'
import { join } from 'path'
import { isValidHexCode } from '../functions'

// Consts
const fetchLink = "https://raw.githubusercontent.com/ghosh/uiGradients/master/gradients.json"

// Types
type gradientType = {
    name: string,
    colors: string[]
} 

const escapeRegExp = (string:string) => {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
}

const snake = (colorName: string):string => {
    let words = colorName.split(' ')
    words[0] = words[0].toLowerCase()
    let name = words.join('')

    // Some names had symbols and numbers, put them here and how to scape them
    const replace = {
        '&': 'And',
        '+': 'Plus',
        '50': 'fifty',
        "'": '',
        '80': 'eighty'
    }

    Object.entries(replace).forEach(entry => {
        const [bad, replace] = entry
        const regexp = new RegExp(escapeRegExp(bad),'g')
        name = name.replace(regexp,replace)
    })

    return name
}

const literalArray = (arrayOfStrings:string[]):string => {
    let text = '['
    arrayOfStrings.forEach(string => {
        text += `"${string}",`
    })
    text += ']'
    return text
}

const main = async () => {
    const result = await fetch(fetchLink)
    const json:gradientType[] = await result.json()    

    let fileText = `// uiGradients variables, file generated by './getui.js'\n\n// Final gradients\n`
    let colorNames:string[] = []

    json.forEach(gradient => {
        let validGradient = true
        gradient.colors.forEach(color => {
            if(!isValidHexCode(color)){
                validGradient = false
            }
        })

        if(!validGradient) return

        const colorName = snake(gradient.name)
        fileText += `const ${colorName} = ${literalArray(gradient.colors)}\n`
        colorNames.push(colorName)
    })

    fileText += `\n// Exports\nexport const uiMainGradients = {${colorNames.join()}}`
    
    // When runed in .js, it will create a typescript file first, then you need to compile again to make the js
    writeFileSync(join(__dirname, '../../src/gradients/uigradients-variables.ts'),fileText)
}
main()